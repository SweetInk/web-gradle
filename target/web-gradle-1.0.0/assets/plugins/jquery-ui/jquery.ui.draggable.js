!function (a) { function b(b) { var c = a.data(b.data.target, "draggable").options, d = b.data, e = d.startLeft + b.pageX - d.startX, f = d.startTop + b.pageY - d.startY; null != c.deltaX && void 0 != c.deltaX && (e = b.pageX + c.deltaX), null != c.deltaY && void 0 != c.deltaY && (f = b.pageY + c.deltaY), b.data.parnet != document.body && 1 == a.boxModel && (e += a(b.data.parent).scrollLeft(), f += a(b.data.parent).scrollTop()), "h" == c.axis ? d.left = e : "v" == c.axis ? d.top = f : (d.left = e, d.top = f) } function c(b) { var c = a.data(b.data.target, "draggable").options, d = a.data(b.data.target, "draggable").proxy; d ? d.css("cursor", c.cursor) : (d = a(b.data.target), a.data(b.data.target, "draggable").handle.css("cursor", c.cursor)), d.css({ left: b.data.left, top: b.data.top }) } function d(d) { var g, e = a.data(d.data.target, "draggable").options, f = a(".droppable").filter(function () { return d.data.target != this }).filter(function () { var b = a.data(this, "droppable").options.accept; return b ? a(b).filter(function () { return this == d.data.target }).length > 0 : !0 }); return a.data(d.data.target, "draggable").droppables = f, g = a.data(d.data.target, "draggable").proxy, g || (e.proxy ? (g = "clone" == e.proxy ? a(d.data.target).clone().insertAfter(d.data.target) : e.proxy.call(d.data.target, d.data.target), a.data(d.data.target, "draggable").proxy = g) : g = a(d.data.target)), g.css("position", "absolute"), b(d), c(d), e.onStartDrag.call(d.data.target, d), !1 } function e(d) { b(d), 0 != a.data(d.data.target, "draggable").options.onDrag.call(d.data.target, d) && c(d); var e = d.data.target; return a.data(d.data.target, "draggable").droppables.each(function () { var b = a(this), c = a(this).offset(); d.pageX > c.left && d.pageX < c.left + b.outerWidth() && d.pageY > c.top && d.pageY < c.top + b.outerHeight() ? (this.entered || (a(this).trigger("_dragenter", [e]), this.entered = !0), a(this).trigger("_dragover", [e])) : this.entered && (a(this).trigger("_dragleave", [e]), this.entered = !1) }), !1 } function f(c) { function f() { d && d.remove(), a.data(c.data.target, "draggable").proxy = null } function g() { var b = !1; return a.data(c.data.target, "draggable").droppables.each(function () { var d = a(this), f = a(this).offset(); c.pageX > f.left && c.pageX < f.left + d.outerWidth() && c.pageY > f.top && c.pageY < f.top + d.outerHeight() && (e.revert && a(c.data.target).css({ position: c.data.startPosition, left: c.data.startLeft, top: c.data.startTop }), a(this).trigger("_drop", [c.data.target]), b = !0, this.entered = !1) }), b } var d, e; return b(c), d = a.data(c.data.target, "draggable").proxy, e = a.data(c.data.target, "draggable").options, e.revert ? 1 == g() ? (f(), a(c.data.target).css({ position: c.data.startPosition, left: c.data.startLeft, top: c.data.startTop })) : d ? d.animate({ left: c.data.startLeft, top: c.data.startTop }, function () { f() }) : a(c.data.target).animate({ left: c.data.startLeft, top: c.data.startTop }, function () { a(c.data.target).css("position", c.data.startPosition) }) : (a(c.data.target).css({ position: "absolute", left: c.data.left, top: c.data.top }), f(), g()), e.onStopDrag.call(c.data.target, c), a(document).unbind(".draggable"), !1 } a.fn.draggable = function (b) { if ("string" == typeof b) switch (b) { case "options": return a.data(this[0], "draggable").options; case "proxy": return a.data(this[0], "draggable").proxy; case "enable": return this.each(function () { a(this).draggable({ disabled: !1 }) }); case "disable": return this.each(function () { a(this).draggable({ disabled: !0 }) }) } return this.each(function () { function i(b) { var c, g; 0 != k(b) && (c = a(b.data.target).position(), g = { startPosition: a(b.data.target).css("position"), startLeft: c.left, startTop: c.top, left: c.left, top: c.top, startX: b.pageX, startY: b.pageY, target: b.data.target, parent: a(b.data.target).parent()[0] }, a(document).bind("mousedown.draggable", g, d), a(document).bind("mousemove.draggable", g, e), a(document).bind("mouseup.draggable", g, f)) } function j(b) { k(b) ? a(this).css("cursor", c.cursor) : a(this).css("cursor", "default") } function k(b) { var d = a(h).offset(), e = a(h).outerWidth(), f = a(h).outerHeight(), g = b.pageY - d.top, i = d.left + e - b.pageX, j = d.top + f - b.pageY, k = b.pageX - d.left; return Math.min(g, i, j, k) > c.edge } var c, h, g = a.data(this, "draggable"); return g ? (g.handle.unbind(".draggable"), c = a.extend(g.options, b)) : c = a.extend({}, a.fn.draggable.defaults, b || {}), 1 == c.disabled ? (a(this).css("cursor", "default"), void 0) : (h = null, h = "undefined" == typeof c.handle || null == c.handle ? a(this) : "string" == typeof c.handle ? a(c.handle, this) : h, a.data(this, "draggable", { options: c, handle: h }), h.bind("mousedown.draggable", { target: this }, i), h.bind("mousemove.draggable", { target: this }, j), void 0) }) }, a.fn.draggable.defaults = { proxy: null, revert: !1, cursor: "move", deltaX: null, deltaY: null, handle: null, disabled: !1, edge: 0, axis: null, onStartDrag: function () { }, onDrag: function () { }, onStopDrag: function () { } } }(jQuery);